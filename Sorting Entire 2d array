#include <stdio.h>

#define ROW 3
#define COL 3

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Function to sort a 1D array using Bubble Sort
void sort1D(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

// Function to convert 2D to 1D, sort, and restore to 2D
void sort2DArray(int arr[ROW][COL]) {
    int temp[ROW * COL];
    int k = 0;

    // Flatten the 2D array to 1D
    for (int i = 0; i < ROW; i++) {
        for (int j = 0; j < COL; j++) {
            temp[k++] = arr[i][j];
        }
    }

    // Sort the 1D array
    sort1D(temp, ROW * COL);

    // Convert back to 2D
    k = 0;
    for (int i = 0; i < ROW; i++) {
        for (int j = 0; j < COL; j++) {
            arr[i][j] = temp[k++];
        }
    }
}

// Function to print the 2D array
void print2DArray(int arr[ROW][COL]) {
    for (int i = 0; i < ROW; i++) {
        for (int j = 0; j < COL; j++) {
            printf("%d ", arr[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int arr[ROW][COL] = {{5, 2, 9}, {4, 1, 7}, {8, 3, 6}};

    printf("Original Array:\n");
    print2DArray(arr);

    sort2DArray(arr);

    printf("\nSorted Entire 2D Array:\n");
    print2DArray(arr);

    return 0;
}
